generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Klepton {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime  @updatedAt @db.Timestamptz(6)
  title        String    @db.VarChar(255)
  stitle       String    @db.VarChar(255)
  description  String    @db.VarChar(2500)
  pic          String    @db.VarChar(255)
  ownerOnly    Boolean   @map("owner_only")
  memberOnly   Boolean   @map("member_only")
  memberCount  Int       @map("member_count")
  postCount    Int       @map("post_count")
  owner        User      @relation("KleptonOwner", fields: [ownerId], references: [id])
  ownerId      Int       @map("owner_id")
  posts        Post[]
  members      User[]    @relation("KleptonMembers")

  @@index([ownerId])
  @@map("klepton")
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @db.Timestamptz(6)
  title     String    @db.VarChar(255)
  content   String    @db.VarChar(8000)
  views     Int       @default(0)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int       @map("author_id")
  klepton   Klepton   @relation(fields: [kleptonId], references: [id])
  kleptonId Int       @map("klepton_id")
  replies   Reply[]

  @@index([authorId, kleptonId])
  @@map("post")
}

model Reply {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @db.Timestamptz(6)
  content   String    @db.VarChar(8000)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int       @map("author_id")
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int       @map("post_id")
  reacts    String[]  @db.VarChar(255)

  @@index([authorId, postId])
  @@map("reply")
}

model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @db.Timestamptz(6)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  dname     String?   @db.VarChar(255)
  name      String?   @db.VarChar(255)
  hidename  Boolean?  @default(false)
  ownedKleptons Klepton[] @relation("KleptonOwner")
  memberOf  Klepton[] @relation("KleptonMembers")
  posts     Post[]
  replies   Reply[]

  @@index([email])
  @@map("user")
}
